Snapshot should now also include total burst, average burst, estimated burst
Burst time can go negative or 0. Have higher priority
Display both active and waiting queue for disk snapshot, cylinder place
Reorder ready queue after process arrival and system call completion

Potential bug: can enter 0 as number of tracks in disk device in Sysgen

total burst is updated using the weighted average equation. Use the initial tao at first to calculate the new one with this formula

Use max int for maximum amount of tracks

HW3:
SYSGEN: Added sysgen input for maximum process size, memory size, page size

CPU: Added arrival process size checking
CPU: Processes added to job pool during process arrival if process size > free memory

Questions
Add processes from job pool when process is terminated?

Location Codes:
r = ready deque
j = job pool
c = cd deque
p = printer deque
d = disk deque
cpu = cpu
d10 -> diskDeques1[0]
p3 -> printerDeques[3]

Add location codes at process arrival, system call, removal from device queue
Job pool feeds into ready queue

Added:
1. kill interrupt
2. start memory prompt in hex
3. sys gen page size, memory prompting
4. tao next, burst number is only updated after termination or system call
5. terminate process asks for time in CPU, updates accordingly
6. updated process arrival to account for the job pool

BINARY SEARCH: http://www.boost.org/doc/libs/1_50_0/libs/range/doc/html/range/reference/algorithms/non_mutating/binary_search.html

QUESTIONS: How is memory divided up into frames?
Is frame size = total memory / page size?
Does it matter which frames a process' pages are assigned to? Does it matter if they're adjacent or not?
Page sizes must evenly divide memory and be a power of 2
If page number = n, max process size = 3n, logical address = any number between 0 and the maximum 2*n (each page starts at 0, 1n, and 2n)
Offset = logical address - page base number it is closet to (ex. if logical address is between 2n and n, offset = logical address - n)
Physical address = frame base number corresponding to page starting number + offset (ex. if frame 2 corresponds to page 2 and the logical address lies between page 2 and page 3, than the physical address = base number of frame 2 + offset)
